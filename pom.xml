<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>alextn62</groupId>
  <artifactId>javatest1</artifactId>
  <version>v1.0</version>

  <name>com.agarrison.tutorial.test1</name>
  <description>A simple java app using maven</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
    </dependency>
  </dependencies>

  <build>
  	<!--  <pluginManagement>  -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
          	<finalName>javatest1</finalName>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
		  <executions>
		  <execution>
		  	<id>default-deploy</id>
		  	<configuration>
		  		<skip>true</skip>
		  	</configuration>
		  </execution>
		  </executions>
        </plugin>
        
      	<!-- start of docker tasks -->
		<plugin>
		  <groupId>org.codehaus.mojo</groupId>
		  <artifactId>exec-maven-plugin</artifactId>
		  <version>1.6.0</version>
		  <configuration>
		  	<goalPrefix>docker</goalPrefix>
		  	<!--  bug in this plugin introduced in 1.6.0 (works in 1.5.0).  
		  		when you have an argument of "-p" it thinks it is a module path name even if it is just some arbitrary argument.  
		  		according to stackoverflow specifying <longModulepath>false</longModulepath> solves the problem for now.  seems to work
		  	 -->
		  	<longModulepath>false</longModulepath>
		  </configuration>
		  <executions>
		      <!-- Remove existing image from local repo -->
		    <execution>
		      <id>docker-clean</id>
		      <phase>install</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		      <configuration>
		        <executable>docker</executable>
		        <workingDirectory>${project.basedir}</workingDirectory>
		        <arguments>
		          <argument>rmi</argument>
		          <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
		        </arguments>
		      </configuration>
		    </execution>
		    <!-- Create new docker image using Dockerfile which must be present in current working directory.
		      Tag the image using maven project version information.
		    -->
		    <execution>
		      <id>docker-build</id>
		      <phase>install</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		      <configuration>
		        <executable>docker</executable>
		        <workingDirectory>${project.basedir}</workingDirectory>
		        <arguments>
		          <argument>build</argument>
		          <argument>-t</argument>
		          <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
		          <argument>.</argument>
		        </arguments>
		      </configuration>
		    </execution>
		        <!-- Login and Push the image to a docker repo. -->
		    <execution>
		      <id>dockerlogin</id>
		      <phase>deploy</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		      <configuration>
		        <executable>docker</executable>
		        <workingDirectory>${project.basedir}</workingDirectory>
		        <arguments>
		          <argument>login</argument>
		          <argument>-u</argument>
		          <argument>${docker.user}</argument>
		          <argument>-p</argument>
		          <argument>${docker.password}</argument>
		          <argument>${docker.url}</argument>
		        </arguments>
		       </configuration>
		    </execution>
		    <execution>
		      <id>docker-push</id>
		      <phase>deploy</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		      <configuration >
		        <executable>docker</executable>
		        <workingDirectory>${project.basedir}</workingDirectory>
		        <arguments>
		          <argument>push</argument>
		          <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
		        </arguments>
		      </configuration>
		    </execution>
		  </executions>
		</plugin>
      	<!-- end of docker tasks -->
      </plugins>
    <!--  </pluginManagement> -->
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
